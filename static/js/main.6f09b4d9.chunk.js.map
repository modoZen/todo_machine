{"version":3,"sources":["App/useTodos.js","App/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoHeader/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","TodosLoading/index.js","TodosError/index.js","EmptyTodos/index.js","ChangeAlert/index.js","ChangeAlert/useStorageListener.js","App/index.js","index.js"],"names":["useTodos","itemName","initialValue","React","useState","sincronizedItem","setSincronizedItem","canChange","setCanChange","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","e","saveItem","newItem","stringifiedItem","sincronizeItem","useLocalStorage","todos","saveTodos","sincronizeTodos","searhValue","setSearhValue","openModal","setOpenModal","completedTodo","filter","todo","completed","length","totalTodos","searchedTodos","text","toLowerCase","includes","addTodo","console","log","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","TodoCounter","className","TodoSearch","placeholder","value","onChange","event","target","disabled","TodoHeader","children","Children","toArray","map","child","cloneElement","TodoList","props","onError","onLoading","onEmpty","Boolean","onEmptySearchResults","searchText","render","TodoItem","onComplete","onDelete","onClick","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","TodoLoading","Array","fill","el","i","TodosError","EmptyTodos","ChangeAlert","storageChange","setStorageChange","change","key","window","addEventListener","removeEventListener","show","toggleShow","useStorageListener","App","Fragment"],"mappings":"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","file":"static/js/main.6f09b4d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nfunction useTodos() {\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        sincronizeItem: sincronizeTodos,\r\n        loading,\r\n        error,\r\n        canChange,\r\n        setCanChange,\r\n      } = useLocalStorage('TODOS_V1',[]);\r\n    \r\n      const [ searhValue, setSearhValue ] = React.useState('');\r\n      const [ openModal, setOpenModal ] = React.useState(false);\r\n    \r\n      const completedTodo = todos.filter(todo=>todo.completed).length;\r\n      const totalTodos = todos.length;\r\n      const searchedTodos = todos.filter(todo=>todo.text.toLowerCase().includes(searhValue.toLowerCase()));\r\n    \r\n      const addTodo = (text)=>{\r\n        console.log(text);\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n          completed: false,\r\n          text\r\n        })\r\n        saveTodos(newTodos);\r\n        setOpenModal(false);\r\n      }\r\n      const completeTodo = (text)=>{\r\n        if(canChange){\r\n          const todoIndex = todos.findIndex(todo=>todo.text===text);\r\n          const newTodos = [...todos];\r\n          newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\r\n          saveTodos(newTodos);\r\n        }\r\n      }\r\n    \r\n      const deleteTodo = (text) =>{\r\n        if(canChange){\r\n          const todoIndex = todos.findIndex(todo=>todo.text===text);\r\n          const newTodos = [...todos];\r\n          newTodos.splice(todoIndex, 1);\r\n          saveTodos(newTodos);\r\n        }\r\n      }\r\n\r\n    return {\r\n      loading,\r\n      error,        \r\n      totalTodos,      \r\n      completedTodo,   \r\n      searhValue,     \r\n      setSearhValue,   \r\n      searchedTodos, \r\n      addTodo,\r\n      completeTodo, \r\n      deleteTodo, \r\n      openModal,\r\n      setOpenModal,\r\n      sincronizeTodos,\r\n      canChange,\r\n      setCanChange,\r\n    }\r\n}\r\n\r\nexport { useTodos }","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [sincronizedItem, setSincronizedItem] = React.useState(true);\r\n    const [canChange, setCanChange ] = React.useState(true);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const [ item , setItem ]    = React.useState(initialValue);\r\n\r\n    React.useEffect(()=>{\r\n        setTimeout( ()=>{\r\n        try {\r\n            const localStorageItem = localStorage.getItem(itemName);\r\n            let parsedItem;\r\n\r\n            if(!localStorageItem) {\r\n            localStorage.setItem(itemName,JSON.stringify(initialValue));\r\n            parsedItem = initialValue;\r\n            } else {\r\n            parsedItem = JSON.parse(localStorageItem);\r\n            }\r\n\r\n            setItem(parsedItem);\r\n            setLoading(false);\r\n            setSincronizedItem(true);\r\n            setCanChange(true)\r\n        } catch (e) {\r\n            setError(error);\r\n        }\r\n        },3000);\r\n    },[sincronizedItem])\r\n\r\n    const saveItem = (newItem) =>{\r\n        const stringifiedItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName,stringifiedItem);\r\n        setItem(newItem);\r\n    }\r\n\r\n    const sincronizeItem = () =>{\r\n        setLoading(true);\r\n        setSincronizedItem(false);\r\n        // setItem([])\r\n    }\r\n\r\n    return {\r\n        item, \r\n        saveItem, \r\n        loading,\r\n        error,\r\n        sincronizeItem,\r\n        canChange,\r\n        setCanChange,\r\n\r\n    };\r\n}\r\n\r\nexport { useLocalStorage }\r\n\r\n// console.log('render antes de useEffect');\r\n\r\n// React.useEffect(()=>{\r\n//   console.log('use effect');\r\n// },[])\r\n\r\n// console.log('render antes de useEffect');","import React from 'react'\r\nimport './TodoCounter.css'\r\n\r\nfunction TodoCounter({completedTodo, totalTodos, loading}) {\r\n    return (\r\n        <h2 className={`TodoCounter ${loading && \"TodoCounter--loading\"}`}\r\n        >\r\n            Has completado {completedTodo} de {totalTodos} TODOs\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport { TodoCounter }","import React from 'react';\r\nimport './TodoSearch.css'\r\n\r\nfunction TodoSearch({searhValue, setSearhValue, loading}) {\r\n\r\n    const onSearchValueChange = (event) =>{setSearhValue(event.target.value);}\r\n    return (\r\n        <input \r\n        className=\"TodoSearch\" \r\n        placeholder=\"gatito\" \r\n        value={searhValue}\r\n        onChange={onSearchValueChange}\r\n        disabled={loading}\r\n        />\r\n    )\r\n}\r\n\r\nexport { TodoSearch }","import React from \"react\";\r\n\r\nfunction TodoHeader({ children, loading }) {\r\n    \r\n\r\n    return (\r\n        <header>\r\n            { React.Children.toArray(children).map((child)=>React.cloneElement(child, { loading})) }\r\n        </header>\r\n    )\r\n}\r\n\r\nexport { TodoHeader }","import './TodoList.css'\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <section className=\"TodoList-container\">\r\n            {props.error && props.onError()}\r\n            {props.loading && props.onLoading()}\r\n            {(!props.loading && !props.totalTodos) && props.onEmpty()}\r\n            {(Boolean(props.totalTodos) && !props.searchedTodos.length) && props.onEmptySearchResults(props.searchText)}\r\n\r\n            <ul>\r\n                {(!props.loading && !props.error) && props.searchedTodos.map(props.render || props.children)}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport { TodoList }\r\n","import { BiCheckCircle } from \"react-icons/bi\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport './TodoItem.css'\r\n\r\nfunction TodoItem(props) {\r\n    const { todo, onComplete, onDelete } = props;\r\n    const { text, completed } = todo; \r\n    \r\n    return (\r\n        <li className=\"TodoItem\">\r\n            {/* <span \r\n            className={`Icon Icon-check ${completed && 'Icon-check--active'}`}\r\n            onClick={onComplete}\r\n            >✓</span> */}\r\n            <BiCheckCircle \r\n            onClick={onComplete}\r\n            className={`Icon Icon-check ${completed && 'Icon-check--active'}`}\r\n            />\r\n            <p  className={`TodoItem-p ${completed && 'TodoItem-p--complete'}`}>{text}</p>\r\n            {/* <span \r\n            className=\"Icon Icon-delete\"\r\n            onClick={onDelete}\r\n            >X</span> */}\r\n            <TiDelete\r\n            className=\"Icon Icon-delete\"\r\n            onClick={onDelete}\r\n            />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport { TodoItem }","import React from 'react';\r\nimport './CreateTodoButton.css'\r\n\r\nfunction CreateTodoButton({setOpenModal,canChange}) {\r\n    const onClickButton = () =>{\r\n        setOpenModal(prevState=>!prevState);\r\n    }\r\n\r\n    return (\r\n        <button \r\n        className=\"CreateTodoButton\"\r\n        onClick={onClickButton}\r\n        disabled={!canChange}\r\n        >+</button>\r\n    )\r\n}\r\n\r\nexport { CreateTodoButton }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css'\r\n\r\nfunction Modal({children}) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>\r\n        ,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport { Modal }","import React from \"react\";  \r\nimport './TodoForm.css'\r\n\r\nfunction TodoForm({addTodo,setOpenModal}) {\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n    const onChange = (event) =>{\r\n        setNewTodoValue(event.target.value);\r\n    }\r\n    const onCancel = () =>{\r\n        setOpenModal(false);\r\n    }\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        addTodo(newTodoValue);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>Escribe tu nuevo TODO</label>\r\n            <textarea \r\n                placeholder=\"Escribe el TODO\"\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button\r\n                type=\"button\"\r\n                onClick={onCancel}\r\n                className=\"TodoForm-button TodoForm-button-cancel\"\r\n                >Cancelar\r\n                </button>\r\n                <button\r\n                type=\"submit\"\r\n                className=\"TodoForm-button TodoForm-button-add\"\r\n                >Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport { TodoForm }","import './TodosLoading.css'\r\nfunction TodoLoading() {\r\n\r\n    return (\r\n        new Array(4).fill().map((el,i)=>(\r\n        <div key={i} className=\"LoadingTodo-container\">\r\n            <span className=\"LoadingTodo-completeIcon\"></span>\r\n            <p className=\"LoadingTodo-text\">Cargando TODOs...</p>\r\n            <span className=\"LoadingTodo-deleteIcon\"></span>\r\n        </div>\r\n        ))\r\n        \r\n    )\r\n}\r\n\r\nexport { TodoLoading }","import React from \"react\";\r\n\r\nfunction TodosError({error}) {\r\n    return <p>Desespérate, hubo un error</p>\r\n}\r\n\r\nexport { TodosError }","import React from \"react\";\r\n\r\nfunction EmptyTodos({error}) {\r\n    return <p>Crea tu primer TODO</p>\r\n}\r\n\r\nexport { EmptyTodos }","import React from \"react\";\r\nimport './ChangeAlert.css'\r\nimport { useStorageListener } from \"./useStorageListener\";\r\n\r\nfunction ChangeAlert({ sincronizeTodos, setCanChange }) {\r\n\r\n    const { show , toggleShow } = useStorageListener(sincronizeTodos,setCanChange);\r\n\r\n    if(show){\r\n        return (\r\n            <div className=\"ChangeAlert-bg\">\r\n                <div className=\"ChangeAlert-container\">\r\n                <p>Parece que cambiaste tus TODOs en otra pestaña o ventana del navegador.</p>\r\n                <p>¿Quieres sincronizar tus TODOs?</p>\r\n                <button\r\n                    className=\"TodoForm-button TodoForm-button--add\"\r\n                    onClick={toggleShow}\r\n                >\r\n                    Yes!\r\n                </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else{\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport { ChangeAlert }","import React from \"react\";\r\n\r\nfunction useStorageListener(sincronizeTodos,setCanChange) {\r\n    const [storageChange, setStorageChange ] = React.useState(false);\r\n\r\n    // window.addEventListener('storage', (change)=>{\r\n    //     if(change.key === 'TODOS_V1'){\r\n    //         console.info('Hubo cambios en TODOS_V1');\r\n    //         setStorageChange(true);\r\n    //         setCanChange(false);\r\n    //     }\r\n    // });\r\n\r\n    React.useEffect(() => {\r\n        const onChange = (change) => {\r\n          if (change.key === \"TODOS_V1\") {\r\n            console.log(\"Hubo cambios en TODOS_V1\");\r\n            setStorageChange(true);\r\n            setCanChange(false);\r\n          }\r\n        };\r\n    \r\n        window.addEventListener(\"storage\", onChange);\r\n    \r\n        return () => {\r\n          window.removeEventListener(\"storage\", onChange);\r\n        };\r\n    }, []);\r\n\r\n    const toggleShow = ()=>{\r\n        setStorageChange(false);\r\n        sincronizeTodos();\r\n    }\r\n\r\n\r\n    return {\r\n        show: storageChange,\r\n        toggleShow,\r\n    }\r\n};\r\n\r\nexport { useStorageListener }","import React from \"react\";\nimport { useTodos } from \"./useTodos\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { TodoHeader } from \"../TodoHeader\"\nimport { TodoList } from \"../TodoList\";\nimport { TodoItem } from \"../TodoItem\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { Modal } from \"../Modal\";\nimport { TodoForm } from \"../TodoForm\";\nimport { TodoLoading } from \"../TodosLoading\";\nimport { TodosError } from \"../TodosError\";\nimport { EmptyTodos } from \"../EmptyTodos\";\nimport { ChangeAlert } from \"../ChangeAlert\";\n// import './App.css';\n\n\nfunction App() {\n  const {\n    error, \n    loading, \n    searchedTodos, \n    completeTodo, \n    deleteTodo, \n    openModal,\n    completedTodo,\n    totalTodos, \n    searhValue,\n    setSearhValue,\n    setOpenModal,\n    addTodo,\n    sincronizeTodos,\n    canChange,\n    setCanChange,\n  } = useTodos();\n  \n  return (\n    <React.Fragment>\n        <TodoHeader loading={loading}>\n            <TodoCounter \n            completedTodo={completedTodo}\n            totalTodos={totalTodos}\n            // loading={loading}\n            />\n            <TodoSearch \n            searhValue={searhValue}\n            setSearhValue={setSearhValue}\n            // loading={loading}\n            />\n        </TodoHeader>\n\n        <TodoList \n          error={error}\n          loading={loading}\n          totalTodos={totalTodos}\n          searchedTodos={searchedTodos}\n          searchText={searhValue}\n          onError={()=><TodosError />}\n          onLoading={()=><TodoLoading />}\n          onEmpty={()=><EmptyTodos />}\n          onEmptySearchResults={\n            (searchText) => (<p>No hay resultado para {searchText} </p>\n          )}\n          // render={todo=>(\n          //   <TodoItem \n          //     key={todo.text} \n          //     todo={todo}\n          //     onComplete={()=>completeTodo(todo.text)}\n          //     onDelete={()=>deleteTodo(todo.text)}\n          //   />\n          // )}\n        >\n          {todo=>(\n            <TodoItem \n              key={todo.text} \n              todo={todo}\n              onComplete={()=>completeTodo(todo.text)}\n              onDelete={()=>deleteTodo(todo.text)}\n              canChange={canChange}\n            />\n          )}\n\n        </TodoList>\n        \n\n        {/* <TodoList>\n            {error && <TodosError />}\n            {loading && <TodoLoading />}\n            {(!loading && !searchedTodos.length) && <EmptyTodos />}\n            {searchedTodos.map(todo=>(\n            <TodoItem \n                key={todo.text} \n                todo={todo}\n                onComplete={()=>completeTodo(todo.text)}\n                onDelete={()=>deleteTodo(todo.text)}\n                />\n            ))}\n        </TodoList> */}\n        {openModal && (\n        <Modal>\n            <TodoForm \n            addTodo={addTodo}\n            setOpenModal={setOpenModal}\n            />\n        </Modal>\n        )}\n        \n        <CreateTodoButton \n        setOpenModal={setOpenModal}\n        canChange={canChange}\n        />\n        <ChangeAlert\n        sincronizeTodos={sincronizeTodos}\n        setCanChange={setCanChange}\n        />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}